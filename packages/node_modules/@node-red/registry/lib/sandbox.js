var path = require('path');
var chalk = require('chalk');
var { NodeVM } = require('vm2');

var cache = {}

var safeModules = [
  '@node-red/nodes/core/common/21-debug',
  '@node-red/nodes/core/function/80-template',
].map(require.resolve)

var requireInVM = function (filename) {
  if (cache[filename]) {
    return cache[filename]
  }

  if (safeModules.includes(filename)) {
    return require(filename)
  }

  var friendlyName = path.basename(filename, path.extname(filename)).replace(/[0-9]+-/, '').toUpperCase()
  var debug = function (message) {
    console.debug(`[SANDBOX] [${chalk.green(friendlyName)}] ` + message);
  }

  var autoMock = function (id) {
    var orig = require(id)
    var mocked = Object.assign({}, orig)
    for (const key of Object.getOwnPropertyNames(mocked)) {
      if (typeof mocked[key] === 'function') {
        mocked[key] = function () {
          debug('Call to ' + chalk.cyan(id) + '.' + chalk.cyan(key))
          return orig[key].apply(orig[key], arguments)
        }
        mocked[key].name = key
      }
    }
    mocked.__mocked = true
    return mocked
  }

  var vm = new NodeVM({
    require: {
      external: true,
      builtin: ['*'],
      mock: {
        'fs-extra': autoMock('fs-extra'),
        'graceful-fs': autoMock('graceful-fs'),
        fs: autoMock('fs')
      }
    }
  })

  var _exports = vm.runFile(filename)

  cache[filename] = _exports
  return _exports
}

module.exports = {
  require: requireInVM
}
